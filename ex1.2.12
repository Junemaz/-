public class SmartDate {
    private final int month;
    private final int day;
    private final int year;

    public SmartDate(int m, int d, int y) {
        switch (m) {
            case 1:
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12:
                if (d > 0 && d < 32) {
                    month = m;
                    day = d;
                    year = y;
                }
                else throw new IllegalArgumentException("Illegal Day");
                break;
            case 4:
            case 6:
            case 9:
            case 11:
                if (d > 0 && d < 31) {
                    month = m;
                    day = d;
                    year = y;
                }
                else throw new IllegalArgumentException("Illegal Day");
                break;
            case 2:
                if (y % 4 == 0 && y % 100 != 0 || y % 400 == 0) {
                    if (d > 0 && d < 30) {
                        month = m;
                        day = d;
                        year = y;
                    }
                    else throw new IllegalArgumentException("Illegal Day");
                }
                else {
                    if (d > 0 && d < 29) {
                        month = m;
                        day = d;
                        year = y;
                    }
                    else throw new IllegalArgumentException("Illegal Day");
                }
                break;
            default:
                throw new IllegalArgumentException("Illegal Day");
        }

    }


    public int month() {
        return month;
    }

    public int day() {
        return day;
    }

    public int year() {
        return year;
    }


    public String toString() {
        return month() + "/" + day() + "/" + year();
    }

    public String dayOfTheWeek() {
        int a = this.year / 100;
        int b = a / 4;
        int c = (a + b) / 7;
        switch (c) {
            case 0:
                return "Sunday";
            //break;
            case 1:
                return "Monday";
            // break;
            case 2:
                return "Tuesday";
            // break;
            case 3:
                return "Wen";
            //break;
            case 4:
                return "Thur";
            // break;
            case 5:
                return "Fie";
            // break;
            default:
                return "Sau";
            // break;

        }
    }

    public boolean equals(Object x) {
        if (this == x) return true;     //如果该对象的引用与参数对象的引用相同，返回true
        if (x == null) return false;    // 若参数为空，约定返回false
        if (this.getClass() != x.getClass()) return false;  //两个对象类不同，返回false
        SmartDate that = (SmartDate) x;
        if (this.day != that.day) return false;
        if (this.month != that.month) return false;
        if (this.year != that.year) return false;
        return true;

    }


    public static void main(String[] args) {
        SmartDate a = new SmartDate(11, 13, 2019);
        SmartDate b = new SmartDate(12, 11, 2008);
        StdOut.println(a);
        StdOut.println(b);
        StdOut.println(a.dayOfTheWeek());
        if (a.equals(b))
            StdOut.println("True");
        else StdOut.println("False");
    }
}
