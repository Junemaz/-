public class Stack<Item> //implements Iterable<Item>
{
    private Node first;
    private int N;

    private class Node {
        Item item;
        Node next;
    }

    public boolean isEmpty() {
        return first == null;
    }

    public int size() {
        return N;
    }


    public void push(Item item) {
        Node oldfirst = first;
        first = new Node();
        first.next = oldfirst;
        first.item = item;
        N++;
    }

    public Item pop() {
        Item item = first.item;
        first = first.next;
        N--;
        return item;
    }
    public static void main(String[] args) {
        Stack<String> ope = new Stack<String>();
        String readitem = StdIn.readString();
        String[] items = readitem.split("");
        String[] example = { "+", "-", "*", "/", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0" };
        for (String item : items) {
            boolean ss = false;
            if (item.length() == 1)
                for (int i = 0; i < 14; i++)
                    ss = ss || item.equals(example[i]);
            if (ss)
                ope.push(item);
            else if (item.equals(")")) {
                String temps = ")";
                for (int i = 0; i < 3; i++)
                    temps = ope.pop() + temps;
                temps = "(" + temps;
                ope.push(temps);
            }
            else {
                StdOut.println("Erroring Input");
                return;
            }
        }
        StdOut.print(ope.pop());
    }

}



