#include <iostream>
#include <memory>

using namespace std;

template<typename T>
struct Node {
	T data;
	unique_ptr<Node<T>> next;
	~Node()
	{
		cout << "~Node" << endl;
	}
};

template<typename T>
class Link {
public :
	void front(const T& data) {
		auto node = make_unique<Node<T>>();
		node->data = data;
		node->next = move(_head.next);
		_head.next = move(node);
	}
	void print() {
		Node<T>* node = _head.next.get();
		while (node) {
			cout << node->data << ' ';
			node = node->next.get();
		}
		cout << '\n';
	}

private:
	Node<T> _head;
};


int main() {
	Link<int> lk;
	for (int val : {1, 2, 3, 4, 5}) {
		lk.front(val);
	}
	lk.print();
}

